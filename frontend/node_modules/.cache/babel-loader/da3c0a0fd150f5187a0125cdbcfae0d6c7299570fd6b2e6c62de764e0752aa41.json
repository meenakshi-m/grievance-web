{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\GitHub\\\\my grievance web\\\\GWE\\\\frontend\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getGrievances, updateGrievanceStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [grievances, setGrievances] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchGrievances();\n  }, []);\n  const fetchGrievances = async () => {\n    try {\n      const response = await getGrievances();\n      setGrievances(response.data);\n    } catch (error) {\n      setMessage('Error fetching grievances');\n    }\n  };\n  const handleMarkAsResolved = async grievanceId => {\n    try {\n      await updateGrievanceStatus(grievanceId, 'Resolved');\n      setMessage('Grievance status updated');\n      fetchGrievances(); // Refresh the list after update\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(`Error updating status: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Server error'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: grievances.map(grievance => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: grievance.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: grievance.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: grievance.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: grievance.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: grievance.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMarkAsResolved(grievance._id),\n            children: \"Mark as Resolved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, grievance._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"H7Nc0YtKBwgZPU0SkbKInZJ+nn8=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getGrievances","updateGrievanceStatus","jsxDEV","_jsxDEV","AdminDashboard","_s","grievances","setGrievances","message","setMessage","fetchGrievances","response","data","error","handleMarkAsResolved","grievanceId","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","grievance","email","type","title","description","status","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/asus/Documents/GitHub/my grievance web/GWE/frontend/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getGrievances, updateGrievanceStatus } from '../services/api';\r\n\r\nconst AdminDashboard = () => {\r\n  const [grievances, setGrievances] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchGrievances();\r\n  }, []);\r\n\r\n  const fetchGrievances = async () => {\r\n    try {\r\n      const response = await getGrievances();\r\n      setGrievances(response.data);\r\n    } catch (error) {\r\n      setMessage('Error fetching grievances');\r\n    }\r\n  };\r\n\r\n  const handleMarkAsResolved = async (grievanceId) => {\r\n    try {\r\n      await updateGrievanceStatus(grievanceId, 'Resolved');\r\n      setMessage('Grievance status updated');\r\n      fetchGrievances(); // Refresh the list after update\r\n    } catch (error) {\r\n      setMessage(`Error updating status: ${error.response?.data?.message || 'Server error'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      {message && <p>{message}</p>}\r\n      <table>\r\n        {/* Render grievances in a table */}\r\n        {\r\n          grievances.map((grievance) => (\r\n            <tr key={grievance._id}>\r\n              <td>{grievance.email}</td>\r\n              <td>{grievance.type}</td>\r\n              <td>{grievance.title}</td>\r\n              <td>{grievance.description}</td>\r\n              <td>{grievance.status}</td>\r\n              <td>\r\n                <button onClick={() => handleMarkAsResolved(grievance._id)}>Mark as Resolved</button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}