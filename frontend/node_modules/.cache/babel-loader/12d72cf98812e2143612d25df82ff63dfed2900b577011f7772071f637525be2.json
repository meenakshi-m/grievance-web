{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const register = async data => {\n  return await axios.post(`${API_URL}/auth/register`, data);\n};\nexport const login = async data => {\n  const response = await axios.post('http://localhost:5000/api/auth/login', data);\n  if (response.data.token) {\n    localStorage.setItem('token', response.data.token);\n    // Assuming you get the user's email from the response\n    return response.data.email;\n  }\n  throw new Error('Login failed');\n};\nexport const submitGrievance = async formData => {\n  const token = localStorage.getItem('token');\n  return await axios.post(`${API_URL}/grievances`, formData, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const getGrievances = async () => {\n  const token = localStorage.getItem('token');\n  return await axios.get(`${API_URL}/grievances/user-grievances`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const updateGrievanceStatus = async (id, status) => {\n  const token = localStorage.getItem('token');\n  return await axios.put(`${API_URL}/grievances/update-status/${id}`, {\n    status\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const searchSite = async query => {\n  const response = await axios.get(`${API_URL}/search`, {\n    params: {\n      q: query\n    }\n  });\n  return response.data;\n};\nexport const getUserGrievances = async () => {\n  const token = localStorage.getItem('token');\n  return await axios.get(`${API_URL}/grievances/user-grievances`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","register","data","post","login","response","token","localStorage","setItem","email","Error","submitGrievance","formData","getItem","headers","getGrievances","get","Authorization","updateGrievanceStatus","id","status","put","logout","removeItem","searchSite","query","params","q","getUserGrievances"],"sources":["C:/Users/asus/Documents/GitHub/my grievance web/GWE/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport const register = async (data) => {\r\n  return await axios.post(`${API_URL}/auth/register`, data);\r\n};\r\n\r\nexport const login = async (data) => {\r\n  const response = await axios.post('http://localhost:5000/api/auth/login', data);\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n    // Assuming you get the user's email from the response\r\n    return response.data.email; \r\n  }\r\n  throw new Error('Login failed');\r\n};\r\n\r\n\r\nexport const submitGrievance = async (formData) => {\r\n  const token = localStorage.getItem('token');\r\n  return await axios.post(`${API_URL}/grievances`, formData, {\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\n\r\nexport const getGrievances = async () => {\r\n  const token = localStorage.getItem('token');\r\n  return await axios.get(`${API_URL}/grievances/user-grievances`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateGrievanceStatus = async (id, status) => {\r\n  const token = localStorage.getItem('token');\r\n  return await axios.put(`${API_URL}/grievances/update-status/${id}`, { status }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nexport const searchSite = async (query) => {\r\n  const response = await axios.get(`${API_URL}/search`, {\r\n    params: { q: query },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getUserGrievances = async () => {\r\n  const token = localStorage.getItem('token');\r\n  return await axios.get(`${API_URL}/grievances/user-grievances`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACtC,OAAO,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,gBAAgB,EAAEK,IAAI,CAAC;AAC3D,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAOF,IAAI,IAAK;EACnC,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACO,IAAI,CAAC,sCAAsC,EAAED,IAAI,CAAC;EAC/E,IAAIG,QAAQ,CAACH,IAAI,CAACI,KAAK,EAAE;IACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACH,IAAI,CAACI,KAAK,CAAC;IAClD;IACA,OAAOD,QAAQ,CAACH,IAAI,CAACO,KAAK;EAC5B;EACA,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;AACjC,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,MAAMN,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,MAAMjB,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,aAAa,EAAEe,QAAQ,EAAE;IACzDE,OAAO,EAAE;MACP,eAAe,EAAE,UAAUR,KAAK,EAAE;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMT,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,MAAMjB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,6BAA6B,EAAE;IAC9DiB,OAAO,EAAE;MACPG,aAAa,EAAE,UAAUX,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMY,qBAAqB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,MAAM,KAAK;EACzD,MAAMd,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,MAAMjB,KAAK,CAACyB,GAAG,CAAC,GAAGxB,OAAO,6BAA6BsB,EAAE,EAAE,EAAE;IAAEC;EAAO,CAAC,EAAE;IAC9EN,OAAO,EAAE;MACPG,aAAa,EAAE,UAAUX,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMgB,MAAM,GAAGA,CAAA,KAAM;EAC1Bf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMpB,QAAQ,GAAG,MAAMT,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,SAAS,EAAE;IACpD6B,MAAM,EAAE;MAAEC,CAAC,EAAEF;IAAM;EACrB,CAAC,CAAC;EACF,OAAOpB,QAAQ,CAACH,IAAI;AACtB,CAAC;AAED,OAAO,MAAM0B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMtB,KAAK,GAAGC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO,MAAMjB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,6BAA6B,EAAE;IAC9DiB,OAAO,EAAE;MACPG,aAAa,EAAE,UAAUX,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}